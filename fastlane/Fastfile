# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  before_all do
    ENV["PROJECT_NAME"] = 'Calc'
    ENV["BUNDLE_ID"] = 'org.cathand.Calc'
    ENV["SCHEME_NAME"] = 'Calc'
    ENV["PROVISIONING_PROFILE_SPECIFIER"] = 'CalcCard AdHoc'
    ENV["FIREBASE_GROUPS"] = 'tester'

    clear_derived_data(derived_data_path: "./DerivedData")
    sh "rm -rf ../build"
  end

  desc "Import Certificates and Provisioning Profile"
  private_lane :import_certificates_and_provisioning_profile do
      create_keychain(
          name: "mykeychain",
          password: ENV["KEYCHAIN_PASSWORD"],
          timeout: 1800
      )
      import_certificate(
          certificate_path: "ios_distribution.p12",
          certificate_password: ENV["CERT_PASSWORD"],
          keychain_name: "mykeychain",
          keychain_password: ENV["KEYCHAIN_PASSWORD"]
      )
      install_provisioning_profile(path: "adhoc.mobileprovision")
  end

  desc "Archive AdHoc and send to Firebase"
  lane :adhoc do
    import_certificates_and_provisioning_profile
    gym(
      configuration: "Release",
      derived_data_path: "./DerivedData",
      clean: true,
      verbose: true,
      scheme: ENV["SCHEME_NAME"],
      export_method: "ad-hoc",
      output_directory: "./build/ipa/" + Time.new.strftime("%Y/%m/%d/%H%M"),
      output_name: ENV["PROJECT_NAME"] + ".ipa",
      include_bitcode: false,
      xcargs: "OTHER_SWIFT_FLAGS='$(inherited) -DSTGING' PROVISIONING_PROFILE='adhoc' PROVISIONING_PROFILE_SPECIFIER='" + ENV["PROVISIONING_PROFILE_SPECIFIER"] + "' CODE_SIGN_IDENTITY='" + ENV["CODE_SIGN_IDENTITY"] + "'",
      export_xcargs: "-allowProvisioningUpdates",
      export_options: {
        method: "ad-hoc",
        compileBitcode: false,
        uploadBitcode: false,
        provisioningProfiles: {
          ENV["BUNDLE_ID"] => ENV["PROVISIONING_PROFILE_SPECIFIER"]
        }
      }
    )
    firebase_app_distribution(
      app: ENV["FIREBASE_APP_ID"],
      groups: ENV["FIREBASE_GROUPS"],
      firebase_cli_token: ENV["FIREBASE_CLI_TOKEN"]
    )
  end

  desc "Push a new release build to the App Store"
  lane :release do
    increment_build_number(
      build_number: ENV["BUILD_NUMBER"]
    )
    build_app(
      project: "Calc.xcodeproj", 
      scheme: "Calc",
      export_method: "app-store",
      export_xcargs: "-allowProvisioningUpdates"
    )
    api_key = app_store_connect_api_key(
      key_id: ENV['ASC_API_KEY_ID'],
      issuer_id: ENV['ASC_API_ISSUER_ID'],
      key_filepath: "/Users/nya/asc_key"
    )
    deliver(
      api_key: api_key,
      submit_for_review: false,
      force: true,
      automatic_release: false,
      skip_metadata: true,
      skip_screenshots: true,
      skip_binary_upload: false,
      skip_app_version_update: true,
      precheck_include_in_app_purchases: false
    ) 
  end
end
